server {
  listen       80;
  server_name  domain name;
  
  # server_name  _; #take the dns name bydefault 
  
  return 301 https://$server_name$request_uri;   #convert every http to https

  location / {
    proxy_pass http:// ip address : port;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
  }
  
  location /https {
  root /var/www/tech;
  index tech.html;
  }
  
  
  location /okay {
  return 200 " Hi okay works";
  }
  
  
  location /tech {
  root /var/www/tech;
  index tech.html;
  try_files $uri $uri/ /index.html;     #try multiple location if url not found
  }
  
  location /about {
  root /var/www/about;
  index about.html;
  try_files $uri $uri/ /index.html; 
  }
}

server {
  listen  443 ssl;
  listen [::]:443 ssl;
  server_name aws.com;
     client_max_body_size 1000M;

    server_tokens off;


#   include /etc/nginx/mime.types;

    ssl_buffer_size 8k;
    ssl_dhparam /etc/ssl/certs/dhparam-2048.pem;

    ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

    ssl_ecdh_curve secp384r1;
    ssl_session_tickets off;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4;

    ssl_certificate /etc/certificates/fullchain.pem;
    ssl_certificate_key /etc/certificates/privkey.pem;

                gzip on;
                gzip_disable "msie6";
                gzip_vary on;
                gzip_proxied any;
#               gzip_types application/octet-stream text/plain text/html text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype application/javascript application/shard text/shard;




 location / {
    proxy_pass http://10.0.0.4:8001;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
  }


